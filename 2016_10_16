Reading for 2016 10 16
4a Blackwell and Green. "Notational Systems -- the Cognitive Dimensions of Notations Framework". HCI Models, Theories, and Frameworks: Toward a Multidisciplinary Science, Carrol ed. Morgan Kaufmann. 2003. pp 103-134.
https://www.dropbox.com/s/o3malbb8jlqsj94/BlackwellGreen%20-%20Notational%20Systems%20-%20Cognitive%20Dimensions%20of%20Notational%20Frameworks%20-%20Chapter.pdf?dl=0

we did not meet on 2016 10 09 and so discussion of this reading was tabled until 2016 10 16

Rafael's reading notes:
Blackwell & Green. “Cognitive Dimensions of Notational Frameworks”. Notational Systems.

the authors note that Engineering has a tendency to design by checklist, that is to say, to formalize processes so that their outcomes are predictable and predictably good — according to whatever measurable goodness the context demands.

the authors further note that not all — in fact few other —  design disciplines follow this method. They instead “start in the middle” and explore.

they also note that the checklist approach is insufficient to create novel interfaces.

novel visual grammars are invoked

UI design is more craft than engineering

subject to affect, fashion, and social acceptance (MAYA principle, Chris Conley’s model of invention vs innovation)

worked example of speech-to-text system for Pascal. affordances of system did not match designers’ natural processes.

no language to describe the structure of the information (the program in Pascal in this instance)

the authors use viscosity as I would use the word inertia, 

premature commitment: constraints on the order of doing things in a process

to what degree do Programming Language Designers need to know about Semiotics?

page 5:
looks at the state of theory in visual programming environments, and the dearth of empirical usability studies. states they are good in some contexts and not in others.

every notation highlights some kinds of information at the cost of obscuring others. that is there is a bias , there is privilege

page 6:
Diagrams research summary.

cognitive dimension of Closeness of Mapping (similar to Borges On the exactitude of science. How close is the representation to the domain?)

cognitive dimension of Provisionality (degree of commitment to actions or marks)(see also Buxton’s definition of the properties of a Sketch in Sketching User Experiences: 
1.Bill Buxton. 2007. Sketching User Experiences: Getting the Design Right and the Right Design. Morgan Kaufmann, San Francisco, CA.

)

Fitts's law (often cited as Fitts' law) is a predictive model of human movement primarily used in human–computer interaction and ergonomics. This scientific law predicts that the time required to rapidly move to a target area is a function of the ratio between the distance to the target and the width of the target.

https://www.interaction-design.org/literature/article/fitts-s-law-the-importance-of-size-and-distance-in-ui-design

argues that the Cognitive Dimensions framework is applicable early in the design process. Argues that Fitts’ Law and Hueristic Evaluation are only applicable much later in the process, at a higher level of finish or specification

argues usefulness with visual programming languages

(should there be a link in our conversation here to Scratch + Google and the distribution of their grammars?

https://medium.com/scratchfoundation-blog/the-next-generation-of-scratch-d83426eb9ca9#.5x2js97s9

https://github.com/llk/scratch-blocks

https://github.com/LLK/scratch-vm

typical user activity in visual programming is non-routine design

(routine versus non-routine in orthogonal relationship to routine vs non-routine as well)

page 7:
lists 6 types of notation use activity. not all are required.

components of Notational Systems
interaction language or notation
environment for editing (authoring)
medium of interaction 
(possibly) two kinds of sub-devices

page 8:
gives details about the components, or — rather — details the sub-components


for next time:
McIver et al. Seven Deadly Sins of Introductory Programming Language Design. IEEE Explorer 1996
https://www.dropbox.com/s/kwtxf6yqb29aq7d/McIver%20-%20Seven%20Deadly%20Sins%20of%20Indrocutory%20Programming%20Language%20Design.pdf?dl=0

Made. Some Recent Thoughts on Digital Media. DIS 2002
https://www.dropbox.com/s/9046tj1mh3t4ank/maeda%20-%20some%20recen%20thoughts%20on.pdf?dl=0

Read and Fry. Processing Programming for the Media Arts. AI & Society 2006
https://www.dropbox.com/s/wlouzxzg93c5kcy/Reas%20and%20Fry%20-%20Processing%20programming%20for%20media%20arts.pdf?dl=0




Discussion notes:
interesting stuff happened. I will put more details here later.
